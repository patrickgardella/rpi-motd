#!/bin/bash
#
# Package update information
# version 1.00
# anita2R May 2015
# ******************************************************************************
#   This file can be edited - the 'do not edit' message will appear at the top
#              of the output file '/etc/update-motd.d/20-packages'
#                         which should not be edited
# ******************************************************************************
# If you run this file directly or through 'run-parts /etc/update-motd-static.d'
#          the output will appear in /etc/update-motd.d/20-packages
#                            and not on the screen
# ******************************************************************************
#
# To control message formatting this function places text
#  at left side of box and and puts some '#'s around it
left(){
SP=$(( 62 - ${#1} ))
FLM=" # $1"$(printf %"$SP"s)"#"
}
#
# get package update message
MSG1=$(/usr/lib/update-notifier/apt-check --human-readable)
# look for a '0' at start of first message (if so it won't be printed)
ZERO=${MSG1:0:1}
# remove new lines in message
MSG1=$(echo $MSG1 | tr '\n' ' ')
# modify the '0 updates are security updates' message
MSG1=$(echo $MSG1 | sed 's/0 updates are security updates/None are security updates/')
# get restart message (if any)
MSG2=$(/usr/lib/update-notifier/update-motd-reboot-required)
#
if [[ $ZERO > 0 ]]
        then
        MSG="$MSG1"
        left "$MSG1"
        MSG="$FLM"
        if [[ $MSG2 != "" ]]
                then
                left $MSG1
                MSG=$FLM
                left $MSG2
                MSG="$MSG\n$FLM"
        fi
        else
        left "There are no updates waiting to be installed"
        MSG=$FLM
fi
#
# end of pre-processing
#
OUT="/etc/update-motd.d/"$(basename $0)
exec >${OUT}
#
echo "#!/bin/bash"
echo "###########################################"
echo "#         DO NOT EDIT THIS FILE           #"
echo "#       EDIT the 20-packages file         #"
echo "# in the /etc/update-motd-static.d folder #"
echo "###########################################"
#
echo "cat << EOF" 
echo -e "$MSG"
echo "EOF"
